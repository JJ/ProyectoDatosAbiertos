# ansible	2.1

---
- hosts: "ckan"
  become: "yes"
  remote_user: "vagrant"
  gather_facts: "no"


  vars:
    user: "vagrant"
    temp_dir: "/tmp"
    version_ckan: "2.6"
    version_postgresql: "9.3"
    encoding: "UTF-8"
    locale: "es_ES.UTF-8"

    ## Database Settings
    ckan_db_name: "opendata_ugr"
    ckan_db_user: "opendata_ugr"
    ckan_db_passwd: "{{ lookup('env', 'CKAN_PASSWD') }}"
    datastore_db_name: "datastore_ugr"
    datastore_db_user: "datastore_ugr"
    datastore_db_passwd: "{{ lookup('env', 'DATASTORE_PASSWD') }}"
    ckan_sysadmin: "germaaan"
    ckan_sysadmin_passwd: "{{ lookup('env', 'SYSADMIN_PASSWD') }}"
    ckan_sysadmin_mail: "germanm@ugr.es"
    default_fts_lang: "spanish"

    ## Site Settings
    site_url: "192.168.33.10:8080"

    ## Authorization Settings
    anon_create_dataset: "false"
    create_unowned_dataset: "false"
    create_dataset_if_not_in_organization: "false"
    user_create_groups: "false"
    user_create_organizations: "false"
    user_delete_groups: "false"
    user_delete_organizations: "false"
    create_user_via_api: "false"
    create_user_via_web: "false"
    roles_that_cascade_to_sub_groups: "admin editor"

    ## Search Settings
    site_id: "default"
    solr_url: "http://127.0.0.1:8983/solr"

    ## Plugins Settings
#    plugins: "stats viewhelpers resource_proxy dashboard_preview recline_grid_view recline_graph_view recline_map_view text_view image_view webpage_view geo_view pdf_view linechart barchart piechart basicgrid navigablemap choroplethmap datapusher datastore"
#    plugins: "stats text_view image_view recline_view datastore datapusher"
    plugins: "stats text_view image_view recline_view pdf_view datastore datapusher"

    ## Resource Views Settings
    default_views: "image_view text_view recline_view pdf_view"

    ## Front-End Settings
    site_title: "OpenData UGR"
    site_logo: "/base/images/ckan-logo.png"
    site_description: "Portal para gestionar los datos abiertos de la UGR"
    favicon: "/images/icons/ckan.ico"
    gravatar_default: "identicon"
    preview_direct: "png jpg gif"
    preview_loadable: "html htm rdf+xml owl+xml xml n3 n-triples turtle plain atom csv tsv rss txt json pdf jpg png"
    display_timezone: "server"

    ## Storage Settings
    storage_path: "/var/lib/ckan/{{ datastore_db_name }}"
    max_resource_size: "100"
    max_image_size: "10"

    ## DataPusher Settings
    datapusher_formats: "csv xls xlsx tsv application/csv application/vnd.ms-excel application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
#    datapusher_formats: "csv"
    datapusher_url: "http://0.0.0.0:8800/"

    ## Activity Streams Settings
    activity_streams_enabled: "true"
    activity_list_limit: "30"
    activity_streams_email_notifications: "false"
    email_notifications_since: "2 days"
    hide_activity_from_users: "%(ckan.site_id)s"

    ## Internationalisation Settings
    locale_default: "es"
    locale_order: "en pt_BR ja it cs_CZ ca es fr el sv sr sr@latin no sk fi ru de pl nl bg ko_KR hu sa sl lv"
    locales_offered: ""
    locales_filtered_out: "es_ES"

    ## Feeds Settings
    authority_name: "Universidad de Granada"
    date: ""
    author_name: "Oficina de Software Libre"
    author_link: "http://osl.ugr.es/"

    ## Email settings
#    fqdn: "opendata.ugr.es"
#    mail_user: "opendata"
#    email_to: "opendata@ugr.es"
#    error_email_from: "opendata@ugr.es"
#    smtp_server: "smtp.ugr.es"
#    smtp_port: "587"
#    starttls: "True"
#    smtp_user: "opendata@ugr.es"
#    smtp_password: "{{ lookup('env', 'MAIL_PASSWD') }}"
#    mail_from: "opendata@ugr.es"

    ## Edited Messages
    welcome_message: "Bienvenido a {{ site_title }}"
    search_box: "matr√≠culas"


  tasks:
    - fail:
        msg: "The password to access the CKAN DB has no value."
      when: ckan_db_passwd == ""
    - fail:
        msg: "The password to access the DataStore DB has no value."
      when: datastore_db_passwd == ""
    - fail:
        msg: "The password for CKAN admin has no value."
      when: ckan_sysadmin_passwd == ""
#    - fail:
#        msg: "The password to access mail has no value."
#      when: smtp_password == ""

    - name: "Update cache"
      apt:
        update_cache: "yes"
        cache_valid_time: "1800"
        upgrade: "safe"
        dpkg_options: "force-confold"
#    - name: "Set Postfix option type"
#      debconf:
#        name: "postfix"
#        question: "postfix/main_mailer_type"
#        value: "'Internet Site'"
#        vtype: "string"
#    - name: "Set Postfix option hostname"
#      debconf:
#        name: "postifx"
#        question: "postfix/mailname"
#        value: "{{ fqdn }}"
#        vtype: "string"
    - name: "Install dependencies"
      apt:
        name: "{{ item }}"
        state: "latest"
        dpkg_options: "force-confold"
      with_items:
        - "apache2"
        - "git-core"
        - "libapache2-mod-wsgi"
        - "libpq-dev"
        - "libpq5"
#        - "mailutils"
        - "nginx"
        - "openjdk-7-jdk"
#        - "postfix"
        - "postgresql-{{ version_postgresql }}"
        - "python-dev"
        - "python-pastescript"
        - "python-pip"
        - "redis-server"
        - "solr-jetty"

    - name: "Create directory for storage"
      file:
        path: "{{ storage_path }}"
        state: "directory"
        mode: "0755"
        owner: "www-data"

    - name: "CKAN instalation..."
      shell: "if [ $(dpkg-query -W python-ckan | grep {{ version_ckan }} | wc -l) -eq \"1\" ]; then echo \"true\"; else echo \"false\"; fi"
      register: "ckan_installed"
    - block:
      - name: "Download CKAN"
        get_url:
          url: "http://packaging.ckan.org/python-ckan_{{ version_ckan }}-trusty_amd64.deb"
          dest: "{{ temp_dir }}"
          mode: "0550"
      - name: "Install CKAN"
        apt:
          deb: "{{ temp_dir }}/python-ckan_{{ version_ckan }}-trusty_amd64.deb"
      - name: "Install CKAN requirements"
        pip:
          requirements: "/usr/lib/ckan/default/src/ckan/requirements.txt"
      - name: "Generate locale settings"
        command: "locale-gen es_ES.UTF-8"
      - name: "Reconfiguring locale settings"
        command: "dpkg-reconfigure locales"
      when: ckan_installed.stdout == "false"

    - name: "Check if plugins for visualizations are already installed"
      stat: "path=/home/{{ user }}/plugins/"
      register: "plugins_installed"
    - block:
      - name: "Download plugins for visualizations"
        git:
          repo: "https://github.com/ckan/{{ item.ext }}.git"
          dest: "/home/{{ user }}/plugins/{{ item.ext }}"
        with_items:
          - { ext: 'ckanext-viewhelpers' }
          - { ext: 'ckanext-dashboard' }
          - { ext: 'ckanext-basiccharts' }
          - { ext: 'ckanext-mapviews' }

      - name: "Install plugins for visualizations"
        command: "python setup.py install"
        args:
          chdir: "/home/{{ user }}/plugins/{{ item.ext }}"
        with_items:
          - { ext: 'ckanext-viewhelpers' }
          - { ext: 'ckanext-dashboard' }
          - { ext: 'ckanext-basiccharts' }
          - { ext: 'ckanext-mapviews' }
      - name: "Install another plugins for visualizations"
        pip:
          name: "{{ item.ext }}"
          state: "latest"
        with_items:
          - { ext: 'ckanext-geoview' }
          - { ext: 'ckanext-pdfview' }
      when: plugins_installed.stat.exists == false

    - name: "Check PostgreSQL cluster configuration"
      stat: "path=/etc/postgresql/{{ version_postgresql }}/main/"
      register: "postgresql_cluster_conf"
    - name: "Create PostgreSQL cluster configuration"
      command: "pg_createcluster {{ version_postgresql }} main --start"
      when: postgresql_cluster_conf.stat.exists == false

    - name: "Start PostgreSQL"
      service:
        name: "postgresql"
        state: "started"
        enabled: "yes"

    - name: "Create CKAN user in PostgreSQL"
      postgresql_user:
        name: "{{ ckan_db_user }}"
        password: "{{ ckan_db_passwd }}"
        encrypted: "yes"
        role_attr_flags: "NOSUPERUSER,NOCREATEDB,NOCREATEROLE"
        state: "present"
      become: "true"
      become_user: "postgres"
    - name: "Create CKAN DB in PostgreSQL"
      postgresql_db:
        name: "{{ ckan_db_name }}"
        owner: "{{ ckan_db_user }}"
        encoding: "UTF-8"
        state: "present"
      become: "true"
      become_user: "postgres"

    - name: "Create DataStore user in PostgreSQL"
      postgresql_user:
        name: "{{ datastore_db_user }}"
        password: "{{ datastore_db_passwd }}"
        encrypted: "yes"
        role_attr_flags: "NOSUPERUSER,NOCREATEDB,NOCREATEROLE,LOGIN"
        state: "present"
      become: "true"
      become_user: "postgres"
    - name: "Create DataStore DB in PostgreSQL"
      postgresql_db:
        name: "{{ datastore_db_name }}"
        owner: "{{ ckan_db_user }}"
        encoding: "UTF-8"
        state: "present"
      become: "true"
      become_user: "postgres"

    - name: "Check backup of the Solr schema file"
      stat: "path=/etc/solr/conf/schema.xml.bak"
      register: "backup_solr_schema"
    - name: "Backup the Solr schema file"
      command: "mv /etc/solr/conf/schema.xml /etc/solr/conf/schema.xml.bak"
      when: backup_solr_schema.stat.exists == false

    - name: "Link to the custom CKAN schema"
      file:
        src: "/usr/lib/ckan/default/src/ckan/ckan/config/solr/schema.xml"
        dest: "/etc/solr/conf/schema.xml"
        state: "link"

    - name: "Edit Jetty config"
      replace:
        dest: "/etc/default/jetty"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
      with_items:
        - { regexp: '#{0,1}NO_START.*', line: 'NO_START=0' }
        - { regexp: '#{0,1}JETTY_HOST.*', line: 'JETTY_HOST=127.0.0.1' }
        - { regexp: '#{0,1}JETTY_PORT.*', line: 'JETTY_PORT=8983' }

#    - name: "Edit Postfix config"
#      replace:
#        dest: "/etc/postfix/main.cf"
#        regexp: "myhostname =.*"
#        replace: "myhostname = {{ fqdn }}"

#    - name: "Edit Postfix virtual domain"
#      lineinfile:
#        dest: "/etc/postfix/virtual"
#        line: "{{ user }}@{{ fqdn }} {{ user }}"
#        create: "yes"
#        state: "present"

#    - name: "Create Postfix lookup table"
#      command: "postmap /etc/postfix/virtual"

#    - name: "Create cron job for check mail"
#      cron:
#        name: "Check mail"
#        special_time: "hourly"
#        job: "cd /usr/lib/ckan/default/src/ckan && paster post -c /etc/ckan/default/production.ini /api/action/send_email_notifications > /dev/null"
#        state: "present"

    - name: "Edit CKAN config"
      replace:
        dest: "/etc/ckan/default/production.ini"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
      with_items:
        - { regexp: '#{0,1}sqlalchemy.url.*', line: 'sqlalchemy.url = postgresql://{{ ckan_db_user }}:{{ ckan_db_passwd }}@127.0.0.1/{{ ckan_db_name }}' }
        - { regexp: '#{0,1}ckan.datastore.write_url.*', line: 'ckan.datastore.write_url = postgresql://{{ ckan_db_user }}:{{ ckan_db_passwd }}@localhost/{{ datastore_db_name }}' }
        - { regexp: '#{0,1}ckan.datastore.read_url.*', line: 'ckan.datastore.read_url = postgresql://{{ datastore_db_user }}:{{ datastore_db_passwd }}@localhost/{{ datastore_db_name }}' }
        - { regexp: '#{0,1}ckan.datastore.default_fts_lang.*', line: 'ckan.datastore.default_fts_lang = {{ default_fts_lang }}' }
        - { regexp: '#{0,1}ckan.site_url.*', line: 'ckan.site_url = http://{{ site_url }}' }
        - { regexp: '#{0,1}ckan.auth.anon_create_dataset.*', line: 'ckan.auth.anon_create_dataset = {{ anon_create_dataset }}' }
        - { regexp: '#{0,1}ckan.auth.create_unowned_dataset.*', line: 'ckan.auth.create_unowned_dataset = {{ create_unowned_dataset }}' }
        - { regexp: '#{0,1}ckan.auth.create_dataset_if_not_in_organization.*', line: 'ckan.auth.create_dataset_if_not_in_organization = {{ create_dataset_if_not_in_organization }}' }
        - { regexp: '#{0,1}ckan.auth.user_create_groups.*', line: 'ckan.auth.user_create_groups = {{ user_create_groups }}' }
        - { regexp: '#{0,1}ckan.auth.user_create_organizations.*', line: 'ckan.auth.user_create_organizations = {{ user_create_organizations }}' }
        - { regexp: '#{0,1}ckan.auth.user_delete_groups.*', line: 'ckan.auth.user_delete_groups = {{ user_delete_groups }}' }
        - { regexp: '#{0,1}ckan.auth.user_delete_organizations.*', line: 'ckan.auth.user_delete_organizations = {{ user_delete_organizations }}' }
        - { regexp: '#{0,1}ckan.auth.create_user_via_api.*', line: 'ckan.auth.create_user_via_api = {{ create_user_via_api }}' }
        - { regexp: '#{0,1}ckan.auth.create_user_via_web.*', line: 'ckan.auth.create_user_via_web = {{ create_user_via_web }}' }
        - { regexp: '#{0,1}ckan.auth.roles_that_cascade_to_sub_groups.*', line: 'ckan.auth.roles_that_cascade_to_sub_groups = {{ roles_that_cascade_to_sub_groups }}' }
        - { regexp: '#{0,1}solr_url.*', line: 'solr_url = {{ solr_url }}' }
        - { regexp: '#{0,1}ckan.plugins.*', line: 'ckan.plugins = {{ plugins }}' }
        - { regexp: '#{0,1}ckan.views.default_views.*', line: 'ckan.views.default_views = {{ default_views }}' }
        - { regexp: '#{0,1}ckan.site_title.*', line: 'ckan.site_title = {{ site_title }}' }
        - { regexp: '#{0,1}ckan.site_logo.*', line: 'ckan.site_logo = {{ site_logo }}' }
        - { regexp: '#{0,1}ckan.site_description.*', line: 'ckan.site_description = {{ site_description }}' }
        - { regexp: '#{0,1}ckan.favicon.*', line: 'ckan.favicon = {{ favicon }}' }
        - { regexp: '#{0,1}ckan.gravatar_default.*', line: 'ckan.gravatar_default = {{ gravatar_default }}' }
        - { regexp: '#{0,1}ckan.preview.direct.*', line: 'ckan.preview.direct = {{ preview_direct }}' }
        - { regexp: '#{0,1}ckan.preview.loadable.*', line: 'ckan.preview.loadable = {{ preview_loadable }}' }
        - { regexp: '#{0,1}ckan.display_timezone.*', line: 'ckan.display_timezone = {{ display_timezone }}' }
        - { regexp: '#{0,1}ckan.locale_default.*', line: 'ckan.locale_default = {{ locale_default }}' }
        - { regexp: '#{0,1}ckan.locale_order.*', line: 'ckan.locale_order = {{ locale_order }}' }
        - { regexp: '#{0,1}ckan.locales_offered.*', line: 'ckan.locales_offered = {{ locales_offered }}' }
        - { regexp: '#{0,1}ckan.locales_filtered_out.*', line: 'ckan.locales_filtered_out = {{ locales_filtered_out }}' }
        - { regexp: '#{0,1}ckan.feeds.authority_name.*', line: 'ckan.feeds.authority_name = {{ authority_name }}' }
        - { regexp: '#{0,1}ckan.feeds.date.*', line: 'ckan.feeds.date = {{ date }}' }
        - { regexp: '#{0,1}ckan.feeds.author_name.*', line: 'ckan.feeds.author_name = {{ author_name }}' }
        - { regexp: '#{0,1}ckan.feeds.author_link.*', line: 'ckan.feeds.author_link = {{ author_link }}' }
        - { regexp: '#{0,1}ckan.storage_path.*', line: 'ckan.storage_path = {{ storage_path }}' }
        - { regexp: '#{0,1}ckan.max_resource_size.*', line: 'ckan.max_resource_size = {{ max_resource_size }}' }
        - { regexp: '#{0,1}ckan.max_image_size.*', line: 'ckan.max_image_size = {{ max_image_size }}' }
        - { regexp: '#{0,1}ckan.datapusher.formats.*', line: 'ckan.datapusher.formats = {{ datapusher_formats }}' }
        - { regexp: '#{0,1}ckan.datapusher.url.*', line: 'ckan.datapusher.url = {{ datapusher_url }}' }
        - { regexp: '#{0,1}ckan.activity_streams_enabled.*', line: 'ckan.activity_streams_enabled = {{ activity_streams_enabled}}' }
        - { regexp: '#{0,1}ckan.activity_list_limit.*', line: 'ckan.activity_list_limit = {{ activity_list_limit}}' }
        - { regexp: '#{0,1}ckan.activity_streams_email_notifications.*', line: 'ckan.activity_streams_email_notifications = {{ activity_streams_email_notifications}}' }
        - { regexp: '#{0,1}ckan.email_notifications_since.*', line: 'ckan.email_notifications_since = {{ email_notifications_since}}' }
        - { regexp: '#{0,1}ckan.hide_activity_from_users.*', line: 'ckan.hide_activity_from_users = {{ hide_activity_from_users}}' }
#        - { regexp: '#{0,1}email_to.*', line: 'email_to = {{ email_to}}' }
#        - { regexp: '#{0,1}error_email_from.*', line: 'error_email_from = {{ error_email_from}}' }
#        - { regexp: '#{0,1}smtp.server.*', line: 'smtp.server = {{ smtp_server}}:{{ smtp_port }}' }
#        - { regexp: '#{0,1}smtp.starttls.*', line: 'smtp.starttls = {{ starttls}}' }
#        - { regexp: '#{0,1}smtp.user.*', line: 'smtp.user = {{ smtp_user}}' }
#        - { regexp: '#{0,1}smtp.password.*', line: 'smtp.password = {{ smtp_password}}' }
#        - { regexp: '#{0,1}smtp.mail_from.*', line: 'smtp.mail_from = {{ mail_from}}' }

    - name: "Start Jetty"
      service:
        name: "jetty"
        state: "started"
        enabled: "yes"

    - name: "Reload Apache2"
      service:
        name: "apache2"
        state: "reloaded"
        enabled: "yes"

    - name: "CKAN database initialization..."
      shell: "psql -d {{ ckan_db_name }} -c \"SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'\" | tail -2 | head -1"
      become: "true"
      become_user: "postgres"
      register: "ckan_db_state"
    - block:
      - name: "Create the tables for CKAN in the DB"
        command: "paster db init -c /etc/ckan/default/production.ini"
        args:
          chdir: "/usr/lib/ckan/default/src/ckan"

      - name: "Set permissions for DataStore DB"
        shell: "paster datastore set-permissions -c /etc/ckan/default/production.ini | sudo -u postgres psql --set ON_ERROR_STOP=1"
        args:
          chdir: "/usr/lib/ckan/default/src/ckan"
      when: ckan_db_state.stdout == "(0 rows)"

    - name: "Change CKAN messages"
      replace:
        dest: "/usr/lib/ckan/default/src/ckan/ckan/i18n/{{ locale_default }}/LC_MESSAGES/ckan.po"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
      with_items:
        - { regexp: 'msgstr "Bienvenido a CKAN"', line: 'msgstr "{{ welcome_message }}"' }
        - { regexp: 'msgstr "Ej: ambiente"', line: 'msgstr "Ej: {{ search_box }}"' }

    - name: "Compile the file with messages"
      command: "python setup.py compile_catalog -f --locale {{ locale_default }}"
      args:
        chdir: "/usr/lib/ckan/default/src/ckan"

#    - name: "Restart Postfix"
#      service:
#        name: "postfix"
#        state: "restarted"
#        enabled: "yes"

    - name: "Check if CKAN user exists"
      shell: "if [ $(paster user {{ ckan_sysadmin }} -c /etc/ckan/default/production.ini | grep None | wc -l) -eq \"1\" ]; then echo \"false\"; else echo \"true\"; fi"
      args:
          chdir: "/usr/lib/ckan/default/src/ckan"
      register: "user_exists"
    - block:
      - name: "Create CKAN user"
        command: "paster user add {{ ckan_sysadmin }} name={{ ckan_sysadmin }} password={{ ckan_sysadmin_passwd }} email={{ ckan_sysadmin_mail }} -c /etc/ckan/default/production.ini"
        args:
          chdir: "/usr/lib/ckan/default/src/ckan"
      - name: "Set CKAN user as sysadmin"
        command: "paster sysadmin add {{ ckan_sysadmin }} -c /etc/ckan/default/production.ini"
        args:
          chdir: "/usr/lib/ckan/default/src/ckan"
      when: user_exists.stdout == "false"
