# ansible	2.1

---
- hosts: ckan
  become: yes
  remote_user: vagrant
  gather_facts: no

  vars:
    version: "2.6"
    temp_dir: "/tmp"
    encoding: "UTF-8"
    locale: "es_ES.UTF-8"
    user_ckan: "ckan_default"
    passwd_ckan: "{{ lookup('env', 'passwd_ckan') }}"

  tasks:
    - fail:
        msg: "The password to access the database has no value."
      when: passwd_ckan == ""

    - name: Update cache
      apt:
        update_cache: yes
        cache_valid_time: 1800
        upgrade: safe
        dpkg_options: force-confold
    - name: Install dependencies
      apt:
        name: "{{ item }}"
        state: latest
        dpkg_options: force-confold
      with_items:
        - apache2
        - git-core
        - libapache2-mod-wsgi
        - libpq-dev
        - libpq5
        - nginx
        - openjdk-7-jdk
        - postgresql-9.3
        - python-dev
        - python-pastescript
        - python-pip
        - redis-server
        - solr-jetty
    - name: Check if CKAN is already installed
      shell: if [ $(dpkg-query -W python-ckan | grep {{ version }} | wc -l) -eq "1" ]; then echo "true"; else echo "false"; fi
      register: ckan_installed
#    - debug: msg="{{ckan_installed.stdout}}"
    - block:
      - name: Download CKAN
        get_url:
          url: http://packaging.ckan.org/python-ckan_{{ version }}-trusty_amd64.deb
          dest: "{{ temp_dir }}"
          mode: 0550
      - name: Install CKAN
        apt: deb="{{ temp_dir }}/python-ckan_{{ version }}-trusty_amd64.deb"
      - name: Install CKAN requirements
        pip: requirements=/usr/lib/ckan/default/src/ckan/requirements.txt
      - name: Generate locale settings
        command: locale-gen es_ES.UTF-8
      - name: Reconfiguring locale settings
        command: dpkg-reconfigure locales
      when: ckan_installed.stdout == "false"

#    - debug: msg="{{passwd_ckan}}"
    - name: Create CKAN user in PostgreSQL
      postgresql_user:
        name: ckan_default
        password: "{{ passwd_ckan }}"
        encrypted: yes
        role_attr_flags: NOSUPERUSER,NOCREATEDB,NOCREATEROLE
        state: present
      become: true
      become_user: postgres
    - name: Create CKAN database in PostgreSQL
      postgresql_db:
        name: ckan_default
        owner: ckan_default
        encoding: UTF-8
        state: present
      become: true
      become_user: postgres

    - name: Edit Jetty config
      lineinfile:
        dest: "/etc/default/jetty"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: 'NO_START=1', line: 'NO_START=0' }
        - { regexp: '#JETTY_HOST=\$\(uname -n\)', line: 'JETTY_HOST=127.0.0.1' }
        - { regexp: '#JETTY_PORT=8080', line: 'JETTY_PORT=8983' }

    - name: Check backup of the Solr schema file
      stat: path=/etc/solr/conf/schema.xml.bak
      register: backup_solr_schema
#    - debug: msg="{{backup_solr_schema}}"

    - name: Backup the Solr schema file
      command: mv /etc/solr/conf/schema.xml /etc/solr/conf/schema.xml.bak
      when: backup_solr_schema.stat.exists == false

    - name: Link to the custom CKAN schema
      file:
        src: '/usr/lib/ckan/default/src/ckan/ckan/config/solr/schema.xml'
        dest: '/etc/solr/conf/schema.xml'
        state: link

    - name: Start Jetty
      service:
        name: jetty
        state: started

    - name: Edit CKAN config
      lineinfile:
        dest: "/etc/ckan/default/production.ini"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: 'sqlalchemy.url = postgresql:\/\/ckan_default:pass@localhost\/ckan_default', line: 'sqlalchemy.url = postgresql://ckan_default:{{ passwd_ckan }}@127.0.0.1/ckan_default' }
        - { regexp: 'ckan.site_url =', line: 'ckan.site_url = http://127.0.0.1' } #CHANGE
